-- Code your design here
library IEEE;
use IEEE.std_logic_1164.all;

entity STR27SEG is
port(
	STR_IN	: in string(4 downto 1);
    CATHODES: out std_logic_vector(28 downto 1)
	);
end STR27SEG;

architecture MODULAR of STR27SEG is
  component CHAR27SEG
  	port(
        CHAR_IN		: in character;
        CATHODES	: out std_logic_vector(7 downto 1)
     );
  end component;

begin
CHAR_DECODER_1: CHAR27SEG port map( CHAR_IN => STR_IN(1),
									CATHODES => CATHODES(7 downto 1)
						 		  );
CHAR_DECODER_2: CHAR27SEG port map( CHAR_IN => STR_IN(2),
									CATHODES => CATHODES(14 downto 8)
						 		  );
CHAR_DECODER_3: CHAR27SEG port map( CHAR_IN => STR_IN(3),
									CATHODES => CATHODES(21 downto 15)
						 		  );
CHAR_DECODER_4: CHAR27SEG port map( CHAR_IN => STR_IN(4),
									CATHODES => CATHODES(28 downto 22)
						 		  );
end MODULAR;                                  

library IEEE;
use IEEE.std_logic_1164.all;

entity CHAR27SEG is
	port(
		CHAR_IN		: in character;
    	CATHODES	: out std_logic_vector(7 downto 1)
    );
end CHAR27SEG;

architecture DATAFLOW of CHAR27SEG is
begin
	with CHAR_IN select
    	CATHODES <=	
        	"0000001" when '0', -- Catodo comun, 0 => segmento encendido
            "1001111" when '1',
            "0010010" when '2',
            "0000110" when '3',
            "1001100" when '4',
            "0100100" when '5',
            "0100000" when '6',
            "0001111" when '7',
            "0000000" when '8',
            "0000100" when '9',
            "0001000" when 'A',
            "0110001" when 'C',
            "0000001" when 'O',
            "1111010" when 'R',
            "1110001" when 'L',
            "1110000" when 'T',
            "0110000" when 'E',
            "1001000" when 'H',
            "1000001" when 'U',
            "0100001" when 'G',
            "0100100" when 'S',
            "1111001" when 'I',
            "1101010" when 'N',
            "0010010" when 'Z',
            "1111111" when ' ',
            "1111110" when '-',
            "1111110" when others;
end DATAFLOW;