-- Testbench automatically generated online
-- at https://vhdl.lapinoo.net
-- Generation date : 17.6.2022 10:06:15 UTC

library ieee;
use ieee.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tb_debouncer is
end tb_debouncer;

architecture tb of tb_debouncer is

    component debouncer
        port (clk     : in std_logic;
              btn     : in std_logic;
              btn_clr : out std_logic);
    end component;

    signal clk     : std_logic;
    signal btn     : std_logic;
    signal btn_clr : std_logic;

    constant TbPeriod : time := 10 ns; -- EDIT Put right period here
    signal TbClock : std_logic := '0';
    signal TbSimEnded : std_logic := '0';

begin

    dut : debouncer
    port map (clk     => clk,
              btn     => btn,
              btn_clr => btn_clr);

    -- Clock generation
    TbClock <= not TbClock after TbPeriod/2 when TbSimEnded /= '1' else '0';

    -- EDIT: Check that clk is really your main clock signal
    clk <= TbClock;

    stimuli : process
    begin
        -- EDIT Adapt initialization as needed
        btn <= '0';
		wait for 100 ns;
        -- EDIT Add stimuli here
        btn <= '1'; --Pulso boton
        wait for 1 ns;
        btn <= '0';
        wait for 2 ns;
        btn <= '1';
        wait for 7 ns;
        btn <= '0';
        wait for 20 ns;
        btn <= '1';
        wait for 5 ns;
        btn <= '0';
        wait for 4 ns;
        btn <= '1';
        wait for 9 ns;
        btn <= '0';
        wait for 30 ns;
        btn <= '1';
        wait for 100 ns;
        btn <= '0';--suelto boton
        wait for 100 ns;
        btn <= '1'; --Pulso boton
        wait for 1 ns;
        btn <= '0';
        wait for 2 ns;
        btn <= '1';
        wait for 7 ns;
        btn <= '0';
        wait for 5 ns;
        btn <= '1';
        wait for 5 ns;
        btn <= '0';
        wait for 4 ns;
        btn <= '1';
        wait for 9 ns;
        btn <= '0';
        wait for 3 ns;
        btn <= '1';
        wait for 100 ns;
        btn <= '0';--suelto boton
        wait for 100 ns;
        
        
        
        -- Stop the clock and hence terminate the simulation
        TbSimEnded <= '1';
        wait;
    end process;

end tb;

-- Configuration block below is required by some simulators. Usually no need to edit.

configuration cfg_tb_debouncer of tb_debouncer is
    for tb
    end for;
end cfg_tb_debouncer;