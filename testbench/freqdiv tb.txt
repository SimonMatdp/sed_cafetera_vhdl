-- Testbench automatically generated online
-- at https://vhdl.lapinoo.net
-- Generation date : 29.10.2021 12:21:10 UTC

library ieee;
use ieee.std_logic_1164.all;

entity tb_freq_div is
end tb_freq_div;

architecture tb of tb_freq_div is

    component freq_div
    	generic(modulo:integer:=2);
        port (clk_in  : in std_logic;
              reset   : in std_logic;
              EN      : in std_logic;
              clk_out : out std_logic);
    end component;

    signal clk_in  : std_logic;
    signal reset   : std_logic;
    signal EN      : std_logic;
    signal clk_out : std_logic;

    constant TbPeriod : time := 1000 ns; -- EDIT Put right period here
    signal TbClock : std_logic := '0';
    signal TbSimEnded : std_logic := '0';

begin

    dut : freq_div
    generic map(modulo => 3)
    port map (clk_in  => clk_in,
              reset   => reset,
              EN      => EN,
              clk_out => clk_out);

    -- Clock generation
    TbClock <= not TbClock after TbPeriod/2 when TbSimEnded /= '1' else '0';

    -- EDIT: Check that clk_in is really your main clock signal
    clk_in <= TbClock;

    stimuli : process
    begin
        -- EDIT Adapt initialization as needed
        EN <= '0';

        -- Reset generation
        -- EDIT: Check that reset is really your reset signal
        reset <= '1';
        wait for 100 ns;
        reset <= '0';
        wait for 100 ns;
        EN <= '1';
        wait for 100 ns;
        reset <= '1';
        wait for 100 ns;
        reset <= '0';
        wait for 100 ns;

        -- EDIT Add stimuli here
        wait for 100 * TbPeriod;

        -- Stop the clock and hence terminate the simulation
        TbSimEnded <= '1';
        wait;
    end process;

end tb;

-- Configuration block below is required by some simulators. Usually no need to edit.

configuration cfg_tb_freq_div of tb_freq_div is
    for tb
    end for;
end cfg_tb_freq_div;